From e7009198c321e8e085c986a759714f2175cafe65 Mon Sep 17 00:00:00 2001
From: LorD ClockaN <davor@losinj.com>
Date: Sun, 23 Oct 2011 07:52:44 +0200
Subject: [PATCH] vidc: 720p: Add IDR Frame type support for H264 format -
 CodeAurora

Read IDR frame type from 720p core register set and
propagate it to user space using new IDR frame type
enumeration added in api header file. The IDR frame
type info is used in SYNCFRAME logic for H264 format
in userspace.

CRs-Fixed: 296738
Signed-off-by: Maheshwar Ajja <majja@codeaurora.org>
---
 .../msm/vidc/720p/ddl/vcd_ddl_interrupt_handler.c  |    6 ++++++
 drivers/video/msm/vidc/720p/ddl/vidc.c             |    7 +++++--
 drivers/video/msm/vidc/720p/ddl/vidc.h             |    9 +++++----
 drivers/video/msm/vidc/common/dec/vdec.c           |    3 +++
 drivers/video/msm/vidc/common/vcd/vcd_api.h        |    3 ++-
 include/linux/msm_vidc_dec.h                       |    1 +
 6 files changed, 22 insertions(+), 7 deletions(-)

diff --git a/drivers/video/msm/vidc/720p/ddl/vcd_ddl_interrupt_handler.c b/drivers/video/msm/vidc/720p/ddl/vcd_ddl_interrupt_handler.c
index 7d57033..397f74c 100644
--- a/drivers/video/msm/vidc/720p/ddl/vcd_ddl_interrupt_handler.c
+++ b/drivers/video/msm/vidc/720p/ddl/vcd_ddl_interrupt_handler.c
@@ -834,6 +834,12 @@ static u32 ddl_get_frame
 			frame->data_len = 0;
 			break;
 		}
+	case VIDC_720P_IDRFRAME:
+		{
+			frame->flags |= VCD_FRAME_FLAG_SYNCFRAME;
+			frame->frame = VCD_FRAME_IDR;
+			break;
+		}
 	default:
 		{
 			VIDC_LOG_STRING("CRITICAL-FRAMETYPE");
diff --git a/drivers/video/msm/vidc/720p/ddl/vidc.c b/drivers/video/msm/vidc/720p/ddl/vidc.c
index 65b5c06..eacfbca 100644
--- a/drivers/video/msm/vidc/720p/ddl/vidc.c
+++ b/drivers/video/msm/vidc/720p/ddl/vidc.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2010, Code Aurora Forum. All rights reserved.
+/* Copyright (c) 2010-2011, Code Aurora Forum. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -764,7 +764,10 @@ void vidc_720p_decode_display_info(struct vidc_720p_dec_disp_info
 	disp_info->input_is_interlace =
 	    ((disp_info->input_frame & 0x4) >> 2);
 
-	disp_info->input_frame &= 0x3;
+	if (disp_info->input_frame & 0x10)
+		disp_info->input_frame = VIDC_720P_IDRFRAME;
+	else
+		disp_info->input_frame &= 0x3;
 }
 
 void vidc_720p_decode_skip_frm_details(u32 *free_luma_dpb)
diff --git a/drivers/video/msm/vidc/720p/ddl/vidc.h b/drivers/video/msm/vidc/720p/ddl/vidc.h
index a67197e..03232b9 100644
--- a/drivers/video/msm/vidc/720p/ddl/vidc.h
+++ b/drivers/video/msm/vidc/720p/ddl/vidc.h
@@ -1,4 +1,4 @@
-/* Copyright (c) 2010, Code Aurora Forum. All rights reserved.
+/* Copyright (c) 2010-2011, Code Aurora Forum. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are
@@ -1990,7 +1990,7 @@ do { \
 	(VIDC_720P_WRAPPER_REG_BASE      + 0x00000ebc)
 #define VIDC_REG_441270_PHYS                    \
 	(VIDC_720P_WRAPPER_REG_BASE_PHYS + 0x00000ebc)
-#define VIDC_REG_441270_RMSK                           0xf
+#define VIDC_REG_441270_RMSK                          0x1f
 #define VIDC_REG_441270_SHFT                             0
 #define VIDC_REG_441270_IN                      \
 	in_dword_masked(VIDC_REG_441270_ADDR,  \
@@ -2000,7 +2000,7 @@ do { \
 #define VIDC_REG_441270_DATA_PARTITIONED_BMSK 0x8
 #define VIDC_REG_441270_DATA_PARTITIONED_SHFT 0x3
 
-#define VIDC_REG_441270_FRAME_TYPE_BMSK                0x7
+#define VIDC_REG_441270_FRAME_TYPE_BMSK               0x17
 #define VIDC_REG_441270_FRAME_TYPE_SHFT                  0
 
 #define VIDC_REG_724381_ADDR        \
@@ -2300,7 +2300,8 @@ enum vidc_720p_frame {
 	VIDC_720P_NOTCODED = 0,
 	VIDC_720P_IFRAME = 1,
 	VIDC_720P_PFRAME = 2,
-	VIDC_720P_BFRAME = 3
+	VIDC_720P_BFRAME = 3,
+	VIDC_720P_IDRFRAME = 4
 };
 
 enum vidc_720p_entropy_sel {
diff --git a/drivers/video/msm/vidc/common/dec/vdec.c b/drivers/video/msm/vidc/common/dec/vdec.c
index 9edbedc..82c4c47 100644
--- a/drivers/video/msm/vidc/common/dec/vdec.c
+++ b/drivers/video/msm/vidc/common/dec/vdec.c
@@ -282,6 +282,9 @@ static void vid_dec_output_frame_done(struct video_client_ctx *client_ctx,
 		case VCD_FRAME_NOTCODED:
 			pic_type = PICTURE_TYPE_SKIP;
 			break;
+		case VCD_FRAME_IDR:
+			pic_type = PICTURE_TYPE_IDR;
+			break;
 		default:
 			pic_type = PICTURE_TYPE_UNKNOWN;
 		}
diff --git a/drivers/video/msm/vidc/common/vcd/vcd_api.h b/drivers/video/msm/vidc/common/vcd/vcd_api.h
index f66f66a..4c98329 100644
--- a/drivers/video/msm/vidc/common/vcd/vcd_api.h
+++ b/drivers/video/msm/vidc/common/vcd/vcd_api.h
@@ -1,4 +1,4 @@
-/* Copyright (c) 2010, Code Aurora Forum. All rights reserved.
+/* Copyright (c) 2010-2011, Code Aurora Forum. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are
@@ -59,6 +59,7 @@ enum vcd_frame {
 	VCD_FRAME_P,
 	VCD_FRAME_B,
 	VCD_FRAME_NOTCODED,
+	VCD_FRAME_IDR,
 	VCD_FRAME_32BIT = 0x7fffffff
 };
 
diff --git a/include/linux/msm_vidc_dec.h b/include/linux/msm_vidc_dec.h
index bcceac0..a6094de 100644
--- a/include/linux/msm_vidc_dec.h
+++ b/include/linux/msm_vidc_dec.h
@@ -224,6 +224,7 @@ enum vdec_picture {
 	PICTURE_TYPE_B,
 	PICTURE_TYPE_BI,
 	PICTURE_TYPE_SKIP,
+	PICTURE_TYPE_IDR,
 	PICTURE_TYPE_UNKNOWN
 };
 
-- 
1.7.5.4

